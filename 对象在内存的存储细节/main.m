//
//  main.m
//  对象在内存的存储细节
//
//  Created by 黄念敏 on 2021/4/12.
//
/*
 函数和方法的区别：
 1，函数属于整个文件，方法属于某一个类，不能离开类
 2，函数可以直接调用，方法必须对象和类调用（其实就是对象才可以调用）
    注意：虽然函数属于整个文件，但是不要写在@interface里面，因为可能无法被识别
 3，不能把函数当成方法调用，也不可以把方法当函数调用
 4, 函数是不能直接访问对象的属性和方法
*/

/*
 方法使用注意点：
 1，方法可以没有声明而有实现
 2，方法只有声明没有实现，编译不会报错，但运行会报错
 3，不能把函数当成方法调用，也不可以把方法当函数调用
*/

/*
 类的特点：类可以没有声明而有实现。但不建议这样的操作
*/
#import <Foundation/Foundation.h>

@interface Person : NSObject
{
    //成员变量（实例变量、属性）
    //注意：不能离开类，离开就不是成员变量，而且不能定义的时候初始化
    int age;
}

-(void)test;
@end

@implementation Person
-(void)test{
    NSLog(@"test");
}

@end


//全局变量
//在代码块或函数内的变量，都称为局部变量
//作用域：从定义的一行起直到文件末尾
//可以定义的时候初始化
//程序一启动就得到存储空间，直到程序结束才释放
int i;



int main(int argc, const char * argv[]) {
    
    //new ： 创建对象分配空间、初始化对象属性和isa、返回对象的地址
    
    //创建对象的时候返回的地址就是第0个属性的地址 但，这并不是自定义的属性，而是自动生成的isa属性
    
    //其实类也是一个对象，称之为类对象（系统自动创建的），实例对象的isa就是指向类对象的指针
    
    //类对象中保存着方法列表（储存所有的方法），调用对象方法其实就是调用类对象内的方法而已，而调用类方法会直接到类对象里调用，所以调用类方法比较节省资源
    
    
    //局部变量
    //在代码块或函数内的变量，都称为局部变量
    //作用域：从定义的一行起直到遇到大括号或return
    //可以定义的时候初始化
    int a = 100;
    
    return 0;
}
